[project]
name = "mizani"
description = "Scales for Python"
license = {file = "LICENSE"}
authors = [
  {name = "Hassan Kibirige", email = "has2k1@gmail.com"},
]
dynamic = ["version"]
readme = "README.rst"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Visualization"
]
dependencies = [
    "numpy>=1.19.0",
    "scipy>=1.5.0",
    "pandas>=1.3.5",
    "matplotlib>=3.5.0",
    "palettable",
    "backports.zoneinfo;python_version<'3.9'",
    "tzdata;platform_system=='Windows' or platform_system=='Emscripten'"
]
requires-python = ">=3.8"

[project.optional-dependencies]
doc = [
    "sphinx>=4.5.0",
    "numpydoc>=0.9.1"
]
testing = [
    "ruff",
    "pytest-cov"
]

[project.urls]
homepage = "https://mizani.readthedocs.io/en/stable"
repository = "https://github.com/has2k1/mizani"
changelog = "https://mizani.readthedocs.io/en/stable/changelog.html"
ci = "https://github.com/has2k1/mizani/actions"

[build-system]
requires = [
    "setuptools>=61",
    "setuptools_scm[toml]>=6.2",
    "wheel",
]
build-backend = "setuptools.build_meta"

# Coverage.py
[tool.coverage.run]
branch = true
source = ["mizani"]
include = [
   "mizani/*"
]
omit = [
   "setup.py",
   "mizani/_version.py",
   "mizani/external/*",
   "mizani/tests/*",
]
disable_warnings = ["include-ignored"]

[tool.coverage.report]
exclude_lines = [
   "pragma: no cover",
   "^def test_",
   "if __name__ == .__main__.:",
   "while k < float\\('inf'\\):"
]
precision = 1

[tool.setuptools]
packages = ["mizani"]

[tool.setuptools_scm]
fallback_version = "999"
version_scheme = 'post-release'

[tool.ruff]
line-length = 79
select = ["E", "F", "C"]
ignore = [
    "E741"
]
# Allow autofix for all enabled rules (when `--fix`) is provided
fixable = ["A", "B", "C", "E", "F", "I"]
unfixable = []
exclude = [
    "mizani/external/*"
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8.
target-version = "py38"
